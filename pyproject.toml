[tool.poetry]
name = "commonroad-all"
version = "0.1.0"
description = "Meta-Package for installing all CommonRoad Tools"
authors = ["Cyber-Physical Systems Group, Technical University of Munich <commonroad@lists.lrz.de>"]
license = "GPL-3.0-or-later"
readme = "README.md"
keywords= ["autonomous", "automated", "vehicles", "driving", "motion", "planning", "simulation", "map", "scenario"]
classifiers = [
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)",
    "Operating System :: POSIX :: Linux",
]
packages = [{include = "commonroad_all"}]

[tool.poetry.dependencies]
python = ">=3.10, <3.12"
commonroad-io = [
    { markers = "extra == 'pypi'", version = "^2024.2" },  # PyPI version
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-io.git" }  # repo version; you could additionally specify a branch with, e.g., `branch = "develop"`
]
commonroad-route-planner = [
    { markers = "extra == 'pypi'", version = "^2025.1.0" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad-route-planner.git" }
]
commonroad-scenario-factory = [
    { markers = "extra == 'pypi'", version = "^2.0.0" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/scenario-factory.git" }
]
commonroad-ots = [
    { markers = "extra == 'pypi'", version = "^2025.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/cr-ots-interface.git" }
]
commonroad-sumo = [
    { markers = "extra == 'pypi'", version = "^2025.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/sumo-interface.git" }
]
commonroad-labeling = [
    { markers = "extra == 'pypi'", version = "^2025.1.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/automatic-scenario-labeling.git" },
]
commonroad-crime = [
    { markers = "extra == 'pypi'", version = "^0.4.4" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-criticality-measures.git" }
]
commonroad-drivability-checker = [
    { markers = "extra == 'pypi'", version = "^2025.3.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad-drivability-checker.git" }
]
commonroad-reach = "^2025.2.0"
commonroad-clcs = [
    { markers = "extra == 'pypi'", version = "^2025.2.0" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-clcs.git" }
]
commonroad-global-planner = [
    { markers = "extra == 'pypi'", version = "^0.0.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-global-planner.git" }
]
commonroad-velocity-planner = [
    { markers = "extra == 'pypi'", version = "^1.0.0" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-velocity-planner.git" }
]
commonroad-reactive-planner = [
    { markers = "extra == 'pypi'", version = "^2025.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/reactive-planner.git" }
]
commonroad-raceline-planner = [
    { markers = "extra == 'pypi'", version = "^0.1.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-raceline-planner.git" }
]
commonroad-path-toolkit = [
    { markers = "extra == 'pypi'", version = "^0.0.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-path-toolkit.git" }
]
commonroad-prediction = [
    { markers = "extra == 'pypi'", version = "^0.1.1" },
    { markers = "extra == 'repo'", git = "git@gitlab.lrz.de:cps/commonroad/commonroad-prediction.git" }
]
commonroad-scenario-designer = { git = "git@gitlab.lrz.de:cps/commonroad/commonroad-scenario-designer.git", optional = true}
commonroad-vehicle-models = "^3.0.2"  # TODO relax commonroad-crime to run development version
# commonroad-scenario-designer = "^0.8.4"  # TODO update commonroad-drivability-checker version
# commonroad-carla-interface = "^1.0.0"  # TODO python version must be updated
# commonroad-dataset-converter = "^2023.2"  # TODO python verion must be updated
# commonroad-openscenario-converter = "0.1.0"  # TODO commonroad-io version must be updated
# commonroad-rl = "2023.1.3"  # TODO commonroad-route-planner version must be updated
# commonroad-geometric = "0.1.2"  # TODO python version must be updated
# commonroad-vehicle-models = { git = "git@gitlab.lrz.de:cps/commonroad-vehicle-models.git", branch = "master"}  # TODO relax commonroad-crime
# commonroad-reach = { git = "git@gitlab.lrz.de:cps/commonroad/commonroad-reachable-set.git", branch = "develop" }  # TODO fix build backend
# commonroad-carla-interface = { git = "git@gitlab.lrz.de:cps/commonroad/commonroad-carla-interface.git", branch = "develop" }  # TODO update python version
# commonroad-dataset-converter = { git = "git@gitlab.lrz.de:cps/commonroad/commonroad-dataset-converter.git", branch = "develop" }  # TODO commonroad-drivability-checker version must be updated

[tool.poetry.extras]
pypi = [
    "commonroad-io",
    "commonroad-vehicle-models",
    "commonroad-route-planner",
    "commonroad-scenario-factory",
    "commonroad-ots",
    "commonroad-sumo",
    "commonroad-labeling",
    "commonroad-crime",
    "commonroad-drivability-checker",
    "commonroad-reach",
    "commonroad-clcs",
    "commonroad-global-planner",
    "commonroad-velocity-planner",
    "commonroad-reactive-planner",
    "commonroad-raceline-planner",
    "commonroad-path-toolkit",
    "commonroad-prediction"
]
repo = [
    "commonroad-io",
    "commonroad-vehicle-models",
    "commonroad-route-planner",
    "commonroad-scenario-factory",
    "commonroad-ots",
    "commonroad-sumo",
    "commonroad-labeling",
    "commonroad-crime",
    "commonroad-drivability-checker",
    "commonroad-reach",
    "commonroad-clcs",
    "commonroad-global-planner",
    "commonroad-velocity-planner",
    "commonroad-reactive-planner",
    "commonroad-raceline-planner",
    "commonroad-path-toolkit",
    "commonroad-prediction",
    "commonroad-scenario-designer"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
