stages:
  - linting
  - test_install
  - deploy

default:
  image: python:3.10
  before_script:
    - apt-get update && apt-get install -y git
    - pip install poetry

linting:
  stage: linting
  before_script:
    - pip install pre-commit
  script:
    - pre-commit run --all-files --show-diff-on-failure

install_all:
  image : python:$PYTHON_VERSIONS
  stage: test_install
  parallel :
    matrix :
      - PYTHON_VERSIONS : [ "3.10", "3.11" ]  # TODO extend to 3.12 and 3.13
        PACKAGE_VERSIONS : [ "pypi", "dev" ]
  script:
    - if [ "$PYCKAGE_VERSIONS" == "pypi" ]; then export PACKAGE_VERSIONS_REV="dev"; fi
    - if [ "$PYCKAGE_VERSIONS" == "dev" ]; then export PACKAGE_VERSIONS_REV="pypi"; fi
    - echo "Installing commonroad-io with Python ${PYTHON_VERSIONS} and package versions ${PACKAGE_VERSIONS} and without ${PACKAGE_VERSIONS_REV}"
    - apt-get update && apt-get install -y git  # libomp-dev libboost-all-dev libeigen3-dev libyaml-cpp-dev pybind11-dev doctest-dev doxygen
    - pip install poetry
    - poetry config virtualenvs.in-project true
    - git config --global url."https://gitlab-ci-token:${CI_JOB_TOKEN}@gitlab.lrz.de".insteadOf "ssh://git@gitlab.lrz.de"
    # if job is triggered by a schedule, run poetry update to update dependencies
    - if [ "$CI_PIPELINE_SOURCE" == "schedule" ]; then poetry update; fi
    # note: access to the dev version of other commonroad repos must be granted for this CI
    # to this end, go to https://gitlab.lrz.de/cps/commonroad/commonroad-io (or other repos) → Settings → CI/CD → Job token permissions
    # add your repo to the CI/CD job token allowlist
    - poetry install --with ${PACKAGE_VERSIONS} --without ${PACKAGE_VERSIONS_REV}
    - source .venv/bin/activate

publish_internal:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - poetry config repositories.gitlab ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi
    - poetry build
    - poetry publish --repository gitlab -u gitlab-ci-token -p ${CI_JOB_TOKEN}
  environment:
    name: staging
    url: ${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/pypi

push_to_external_pipy_test_registry:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - poetry config repositories.test https://test.pypi.org/legacy/
    - poetry install --with pypi
    - poetry build
    - poetry publish --repository test -u __token__ -p ${CR_PYPI_TEST_API_TOKEN}

push_to_external_pipy_release_registry:
  stage: deploy
  when: manual
  only:
    - master
  script:
    - poetry install --with pypi
    - poetry build
    - poetry publish -u __token__ -p ${CR_PYPI_RELEASE_API_TOKEN}
